%General Mission Analysis Tool(GMAT) Script
%Created: 2024-12-19 10:30:12

%----------------------------------------
%---------- Spacecraft
%----------------------------------------

Create Spacecraft V2;
GMAT V2.DateFormat = UTCGregorian;
GMAT V2.Epoch = '23 Aug 1977 15:31:44.000';
GMAT V2.CoordinateSystem = SunMJ2000Eq;
GMAT V2.DisplayStateType = Cartesian;
GMAT V2.X = 132524768.6068663;       % km
GMAT V2.Y = -66024387.85489973;      % km
GMAT V2.Z = -27698957.09760745;      % km
GMAT V2.VX = 16.44295765322942;      % km/s
GMAT V2.VY = 30.97762840230931;      % km/s
GMAT V2.VZ = 16.97960898171101;      % km/s
GMAT V2.DryMass = 850;
GMAT V2.Cd = 2.2;
GMAT V2.Cr = 1.8;
GMAT V2.DragArea = 15;
GMAT V2.SRPArea = 20;
GMAT V2.SPADDragScaleFactor = 1;
GMAT V2.SPADSRPScaleFactor = 1;
GMAT V2.AtmosDensityScaleFactor = 1;
GMAT V2.ExtendedMassPropertiesModel = 'None';
GMAT V2.NAIFId = -10010001;
GMAT V2.NAIFIdReferenceFrame = -9010001;
GMAT V2.OrbitColor = Red;
GMAT V2.TargetColor = Teal;
GMAT V2.OrbitErrorCovariance = [ 1e+70 0 0 0 0 0 ; 0 1e+70 0 0 0 0 ; 0 0 1e+70 0 0 0 ; 0 0 0 1e+70 0 0 ; 0 0 0 0 1e+70 0 ; 0 0 0 0 0 1e+70 ];
GMAT V2.CdSigma = 1e+70;
GMAT V2.CrSigma = 1e+70;
GMAT V2.Id = 'SatId';
GMAT V2.Attitude = CoordinateSystemFixed;
GMAT V2.SPADSRPInterpolationMethod = Bilinear;
GMAT V2.SPADSRPScaleFactorSigma = 1e+70;
GMAT V2.SPADDragInterpolationMethod = Bilinear;
GMAT V2.SPADDragScaleFactorSigma = 1e+70;
GMAT V2.AtmosDensityScaleFactorSigma = 1e+70;
GMAT V2.ModelFile = 'aura.3ds';
GMAT V2.ModelOffsetX = 0;
GMAT V2.ModelOffsetY = 0;
GMAT V2.ModelOffsetZ = 0;
GMAT V2.ModelRotationX = 0;
GMAT V2.ModelRotationY = 0;
GMAT V2.ModelRotationZ = 0;
GMAT V2.ModelScale = 1;
GMAT V2.AttitudeDisplayStateType = 'Quaternion';
GMAT V2.AttitudeRateDisplayStateType = 'AngularVelocity';
GMAT V2.AttitudeCoordinateSystem = EarthMJ2000Eq;
GMAT V2.EulerAngleSequence = '321';

Create Spacecraft InitSat;
GMAT InitSat.DateFormat = UTCGregorian;
GMAT InitSat.Epoch = '20 Aug 1977 15:32:32.182';
GMAT InitSat.CoordinateSystem = SunMJ2000Eq;
GMAT InitSat.DisplayStateType = Cartesian;
GMAT InitSat.X = 132524768.6068663;       % km
GMAT InitSat.Y = -66024387.85489973;      % km
GMAT InitSat.Z = -27698957.09760745;      % km
GMAT InitSat.VX = 16.44295765322942;      % km/s
GMAT InitSat.VY = 30.97762840230931;      % km/s
GMAT InitSat.VZ = 16.97960898171101;      % km/s
GMAT InitSat.DryMass = 850;
GMAT InitSat.Cd = 2.2;
GMAT InitSat.Cr = 1.8;
GMAT InitSat.DragArea = 15;
GMAT InitSat.SRPArea = 1;
GMAT InitSat.SPADDragScaleFactor = 1;
GMAT InitSat.SPADSRPScaleFactor = 1;
GMAT InitSat.AtmosDensityScaleFactor = 1;
GMAT InitSat.ExtendedMassPropertiesModel = 'None';
GMAT InitSat.NAIFId = -10011001;
GMAT InitSat.NAIFIdReferenceFrame = -9011001;
GMAT InitSat.OrbitColor = Green;
GMAT InitSat.TargetColor = LightGray;
GMAT InitSat.OrbitErrorCovariance = [ 1e+70 0 0 0 0 0 ; 0 1e+70 0 0 0 0 ; 0 0 1e+70 0 0 0 ; 0 0 0 1e+70 0 0 ; 0 0 0 0 1e+70 0 ; 0 0 0 0 0 1e+70 ];
GMAT InitSat.CdSigma = 1e+70;
GMAT InitSat.CrSigma = 1e+70;
GMAT InitSat.Id = 'SatId';
GMAT InitSat.Attitude = CoordinateSystemFixed;
GMAT InitSat.SPADSRPInterpolationMethod = Bilinear;
GMAT InitSat.SPADSRPScaleFactorSigma = 1e+70;
GMAT InitSat.SPADDragInterpolationMethod = Bilinear;
GMAT InitSat.SPADDragScaleFactorSigma = 1e+70;
GMAT InitSat.AtmosDensityScaleFactorSigma = 1e+70;
GMAT InitSat.ModelFile = 'aura.3ds';
GMAT InitSat.ModelOffsetX = 0;
GMAT InitSat.ModelOffsetY = 0;
GMAT InitSat.ModelOffsetZ = 0;
GMAT InitSat.ModelRotationX = 0;
GMAT InitSat.ModelRotationY = 0;
GMAT InitSat.ModelRotationZ = 0;
GMAT InitSat.ModelScale = 1;
GMAT InitSat.AttitudeDisplayStateType = 'Quaternion';
GMAT InitSat.AttitudeRateDisplayStateType = 'AngularVelocity';
GMAT InitSat.AttitudeCoordinateSystem = EarthMJ2000Eq;
GMAT InitSat.EulerAngleSequence = '321';



















%----------------------------------------
%---------- ForceModels
%----------------------------------------

Create ForceModel NearJupiterProp_ForceModel;
GMAT NearJupiterProp_ForceModel.CentralBody = Jupiter;
GMAT NearJupiterProp_ForceModel.PointMasses = {Earth, Jupiter, Luna, Mars, Mercury, Neptune, Pluto, Saturn, Sun, Uranus, Venus};
GMAT NearJupiterProp_ForceModel.Drag = None;
GMAT NearJupiterProp_ForceModel.SRP = On;
GMAT NearJupiterProp_ForceModel.RelativisticCorrection = Off;
GMAT NearJupiterProp_ForceModel.ErrorControl = RSSStep;
GMAT NearJupiterProp_ForceModel.SRP.Flux = 1367;
GMAT NearJupiterProp_ForceModel.SRP.SRPModel = Spherical;
GMAT NearJupiterProp_ForceModel.SRP.Nominal_Sun = 149597870.691;

Create ForceModel EarthtoJupiterProp_ForceModel;
GMAT EarthtoJupiterProp_ForceModel.CentralBody = Sun;
GMAT EarthtoJupiterProp_ForceModel.PointMasses = {Earth, Jupiter, Luna, Mars, Mercury, Neptune, Pluto, Saturn, Sun, Uranus, Venus};
GMAT EarthtoJupiterProp_ForceModel.Drag = None;
GMAT EarthtoJupiterProp_ForceModel.SRP = On;
GMAT EarthtoJupiterProp_ForceModel.RelativisticCorrection = Off;
GMAT EarthtoJupiterProp_ForceModel.ErrorControl = RSSStep;
GMAT EarthtoJupiterProp_ForceModel.SRP.Flux = 1367;
GMAT EarthtoJupiterProp_ForceModel.SRP.SRPModel = Spherical;
GMAT EarthtoJupiterProp_ForceModel.SRP.Nominal_Sun = 149597870.691;

Create ForceModel EarthPointMass_ForceModel;
GMAT EarthPointMass_ForceModel.CentralBody = Earth;
GMAT EarthPointMass_ForceModel.PointMasses = {Earth};
GMAT EarthPointMass_ForceModel.Drag = None;
GMAT EarthPointMass_ForceModel.SRP = Off;
GMAT EarthPointMass_ForceModel.RelativisticCorrection = Off;
GMAT EarthPointMass_ForceModel.ErrorControl = RSSStep;

%----------------------------------------
%---------- Propagators
%----------------------------------------

Create Propagator NearJupiterProp;
GMAT NearJupiterProp.FM = NearJupiterProp_ForceModel;
GMAT NearJupiterProp.Type = RungeKutta89;
GMAT NearJupiterProp.InitialStepSize = 60;
GMAT NearJupiterProp.Accuracy = 9.999999999999999e-12;
GMAT NearJupiterProp.MinStep = 0.001;
GMAT NearJupiterProp.MaxStep = 86400;
GMAT NearJupiterProp.MaxStepAttempts = 50;
GMAT NearJupiterProp.StopIfAccuracyIsViolated = true;

Create Propagator EarthtoJupiterProp;
GMAT EarthtoJupiterProp.FM = EarthtoJupiterProp_ForceModel;
GMAT EarthtoJupiterProp.Type = RungeKutta89;
GMAT EarthtoJupiterProp.InitialStepSize = 60;
GMAT EarthtoJupiterProp.Accuracy = 9.999999999999999e-12;
GMAT EarthtoJupiterProp.MinStep = 0.001;
GMAT EarthtoJupiterProp.MaxStep = 160000;
GMAT EarthtoJupiterProp.MaxStepAttempts = 50;
GMAT EarthtoJupiterProp.StopIfAccuracyIsViolated = true;

Create Propagator EarthPointMass;
GMAT EarthPointMass.FM = EarthPointMass_ForceModel;
GMAT EarthPointMass.Type = RungeKutta89;
GMAT EarthPointMass.InitialStepSize = 60;
GMAT EarthPointMass.Accuracy = 9.999999999999999e-12;
GMAT EarthPointMass.MinStep = 0.001;
GMAT EarthPointMass.MaxStep = 2700;
GMAT EarthPointMass.MaxStepAttempts = 50;
GMAT EarthPointMass.StopIfAccuracyIsViolated = true;

%----------------------------------------
%---------- Burns
%----------------------------------------

Create ImpulsiveBurn TCM;
GMAT TCM.CoordinateSystem = Local;
GMAT TCM.Origin = Earth;
GMAT TCM.Axes = VNB;
GMAT TCM.Element1 = 10;
GMAT TCM.Element2 = 0;
GMAT TCM.Element3 = 0;
GMAT TCM.DecrementMass = false;
GMAT TCM.Isp = 300;
GMAT TCM.GravitationalAccel = 9.81;

%----------------------------------------
%---------- Coordinate Systems
%----------------------------------------

Create CoordinateSystem SunMJ2000Eq;
GMAT SunMJ2000Eq.Origin = Sun;
GMAT SunMJ2000Eq.Axes = MJ2000Eq;

Create CoordinateSystem EarthMoonRot;
GMAT EarthMoonRot.Origin = Earth;
GMAT EarthMoonRot.Axes = ObjectReferenced;
GMAT EarthMoonRot.XAxis = R;
GMAT EarthMoonRot.ZAxis = N;
GMAT EarthMoonRot.Primary = Earth;
GMAT EarthMoonRot.Secondary = Luna;

Create CoordinateSystem MoonInertial;
GMAT MoonInertial.Origin = Luna;
GMAT MoonInertial.Axes = BodyInertial;

Create CoordinateSystem JupiterInertial;
GMAT JupiterInertial.Origin = Jupiter;
GMAT JupiterInertial.Axes = BodyInertial;

Create CoordinateSystem EarthJupiterRot;
GMAT EarthJupiterRot.Origin = Earth;
GMAT EarthJupiterRot.Axes = ObjectReferenced;
GMAT EarthJupiterRot.XAxis = R;
GMAT EarthJupiterRot.ZAxis = N;
GMAT EarthJupiterRot.Primary = Earth;
GMAT EarthJupiterRot.Secondary = Jupiter;

%----------------------------------------
%---------- Solvers
%----------------------------------------

Create DifferentialCorrector DC1;
GMAT DC1.ShowProgress = true;
GMAT DC1.ReportStyle = Normal;
GMAT DC1.ReportFile = 'DifferentialCorrectorDC1.data';
GMAT DC1.MaximumIterations = 500;
GMAT DC1.DerivativeMethod = ForwardDifference;
GMAT DC1.Algorithm = NewtonRaphson;

%----------------------------------------
%---------- Subscribers
%----------------------------------------

Create OrbitView JupiterInertialView;
GMAT JupiterInertialView.SolverIterations = Current;
GMAT JupiterInertialView.UpperLeft = [ 0.6438450899031812 0.303970223325062 ];
GMAT JupiterInertialView.Size = [ 0.3492392807745505 0.6786600496277916 ];
GMAT JupiterInertialView.RelativeZOrder = 581;
GMAT JupiterInertialView.Maximized = false;
GMAT JupiterInertialView.Add = {V2, Luna, Earth, Jupiter, Sun};
GMAT JupiterInertialView.CoordinateSystem = JupiterInertial;
GMAT JupiterInertialView.DrawObject = [ true true true true true ];
GMAT JupiterInertialView.DataCollectFrequency = 1;
GMAT JupiterInertialView.UpdatePlotFrequency = 50;
GMAT JupiterInertialView.NumPointsToRedraw = 150;
GMAT JupiterInertialView.ShowPlot = true;
GMAT JupiterInertialView.MaxPlotPoints = 20000;
GMAT JupiterInertialView.ShowLabels = true;
GMAT JupiterInertialView.ViewPointReference = Jupiter;
GMAT JupiterInertialView.ViewPointVector = [ 20000 20000 20000 ];
GMAT JupiterInertialView.ViewDirection = Jupiter;
GMAT JupiterInertialView.ViewScaleFactor = 100;
GMAT JupiterInertialView.ViewUpCoordinateSystem = EarthMJ2000Eq;
GMAT JupiterInertialView.ViewUpAxis = Z;
GMAT JupiterInertialView.EclipticPlane = Off;
GMAT JupiterInertialView.XYPlane = On;
GMAT JupiterInertialView.WireFrame = Off;
GMAT JupiterInertialView.Axes = On;
GMAT JupiterInertialView.Grid = Off;
GMAT JupiterInertialView.SunLine = Off;
GMAT JupiterInertialView.UseInitialView = On;
GMAT JupiterInertialView.StarCount = 7000;
GMAT JupiterInertialView.EnableStars = On;
GMAT JupiterInertialView.EnableConstellations = On;

Create OrbitView DefaultOrbitView;
GMAT DefaultOrbitView.SolverIterations = Current;
GMAT DefaultOrbitView.UpperLeft = [ 0.0006915629322268327 0.3325062034739454 ];
GMAT DefaultOrbitView.Size = [ 0.6424619640387276 0.6451612903225806 ];
GMAT DefaultOrbitView.RelativeZOrder = 585;
GMAT DefaultOrbitView.Maximized = false;
GMAT DefaultOrbitView.Add = {V2, Earth, Mars, Jupiter, Neptune, Saturn, Uranus, Sun};
GMAT DefaultOrbitView.CoordinateSystem = SunMJ2000Eq;
GMAT DefaultOrbitView.DrawObject = [ true true true true true true true true ];
GMAT DefaultOrbitView.DataCollectFrequency = 1;
GMAT DefaultOrbitView.UpdatePlotFrequency = 50;
GMAT DefaultOrbitView.NumPointsToRedraw = 0;
GMAT DefaultOrbitView.ShowPlot = true;
GMAT DefaultOrbitView.MaxPlotPoints = 20000;
GMAT DefaultOrbitView.ShowLabels = true;
GMAT DefaultOrbitView.ViewPointReference = Sun;
GMAT DefaultOrbitView.ViewPointVector = Jupiter;
GMAT DefaultOrbitView.ViewDirection = Sun;
GMAT DefaultOrbitView.ViewScaleFactor = 1.5;
GMAT DefaultOrbitView.ViewUpCoordinateSystem = SunMJ2000Eq;
GMAT DefaultOrbitView.ViewUpAxis = Z;
GMAT DefaultOrbitView.EclipticPlane = Off;
GMAT DefaultOrbitView.XYPlane = On;
GMAT DefaultOrbitView.WireFrame = Off;
GMAT DefaultOrbitView.Axes = On;
GMAT DefaultOrbitView.Grid = Off;
GMAT DefaultOrbitView.SunLine = Off;
GMAT DefaultOrbitView.UseInitialView = On;
GMAT DefaultOrbitView.StarCount = 7000;
GMAT DefaultOrbitView.EnableStars = On;
GMAT DefaultOrbitView.EnableConstellations = On;

%----------------------------------------
%---------- Arrays, Variables, Strings
%----------------------------------------
Create Variable RAAN AOP;























%----------------------------------------
%---------- Mission Sequence
%----------------------------------------
BeginMissionSequence;

GMAT InitSat = V2;

%  This target loop varies the injection orbit RAAN and AOP to align the line of apsides with the moon. 
%  This is a course target loop that ensurues the s/c is in the vicinity of the Moon at orbit apogee.  
%  The RA and DEC contraints are applied in and Earth Moon rotating frame.  The x-axis points from Earth to Moon and
%  the z-axis is normal to the plane of the lunar orbit about Earth.  In this frame, we RA = 0 and DEC = 0;
Target 'Coarse Jupiter Target' DC1 {SolveMode = Solve, ExitMode = SaveAndContinue, ShowProgressWindow = true};
   
   %  Vary parking orbit orientation
   Vary 'Vary RAAN' DC1(V2.RAAN = 45.1, {Perturbation = 0.01, Lower = -9.999999e300, Upper = 9.999999e300, MaxStep = 2, AdditiveScaleFactor = 0.0, MultiplicativeScaleFactor = 1.0});
   Vary 'Vary AOP' DC1(V2.AOP = 2.5, {Perturbation = 0.01, Lower = -9.999999e300, Upper = 9.999999e300, MaxStep = 2, AdditiveScaleFactor = 0.0, MultiplicativeScaleFactor = 1.0});
   
   %  Apply TOI
   Maneuver 'Apply TCM' TCM(V2);
   
   %  Save variables for use in fine targeting loop
   GMAT 'Save RAAN' RAAN = InitSat.RAAN;
   GMAT 'Save AOP' AOP = InitSat.AOP;
   
   
   %  Propagate to Apoapsis using point mass earth to avoid potential issues by impacting moon for now.
   Propagate 'Prop To Jupiter' EarthPointMass(V2) {V2.Jupiter.Periapsis};
   
   %  Define the constraints that the line of apsides is aligned with moon
   Achieve 'RA = 0' DC1(V2.EarthJupiterRot.RA = 0, {Tolerance = 0.1});
   Achieve 'DEC = 0' DC1(V2.EarthJupiterRot.DEC = 0, {Tolerance = 0.1});
   
EndTarget;  % For targeter DC1

GMAT 'Equation2' V2 = InitSat;

%  This loop determines the precise values of RAAN, AOP, and TOI to acheive desired lunar orbit conditions;
Target 'Fine Jupiter Target' DC1 {SolveMode = Solve, ExitMode = DiscardAndContinue, ShowProgressWindow = true};
   Vary 'Vary TCM.V' DC1(TCM.Element1 = 10, {Perturbation = 0.1, Lower = -10e300, Upper = 10e300, MaxStep = 5, AdditiveScaleFactor = 0.0, MultiplicativeScaleFactor = 1.0});
   Vary 'Vary TCM.N' DC1(TCM.Element2 = 0, {Perturbation = 0.1, Lower = -10e300, Upper = 10e300, MaxStep = 5, AdditiveScaleFactor = 0.0, MultiplicativeScaleFactor = 1.0});
   Vary 'Vary TCM.B' DC1(TCM.Element3 = 0, {Perturbation = 0.1, Lower = -10e300, Upper = 10e300, MaxStep = 5, AdditiveScaleFactor = 0.0, MultiplicativeScaleFactor = 1.0});
   
   %  Apply TCM
   Maneuver 'Apply TCM' TCM(V2);
   
   
   %  Propagate to Jupiter
   Propagate 'Prop to Jupiter Periapsis' EarthtoJupiterProp(V2) {V2.Jupiter.Periapsis};
   
   %  Define required final orbit parameters
   Achieve 'Achieve BdotT' DC1(V2.JupiterInertial.BdotT = 1913212.28, {Tolerance = 100});
   Achieve 'Achieve BdotR' DC1(V2.JupiterInertial.BdotR = 167664.27, {Tolerance = 100});
   Achieve 'Achieve Time Stamp' DC1(V2.A1ModJulian = 14064.43680555556, {Tolerance = 10});
   
EndTarget;  % For targeter DC1

Propagate 'Prop _ days' NearJupiterProp(V2) {V2.ElapsedDays = 0};
